Left Most Digit of a product 

....................................

You will be given an array nums[ ] of positive integers, the task is to find the left most digit of the product of the numbers in this array.
 

Example 1:

Input: nums = [4, 6, 2, 5]
Output: 2
Explanation: 4 * 6 * 2 * 5 = 240.
So, the leftmost digit is 2.
Example 2:

Input: nums = [1, 2, 3]
Output: 6
Explanation: 1 * 2 * 3 = 6. So, the
leftmost digit is 6.
 

Your Task:
You don't need to read or print anything. Your task is to complete the function LeftMostDigit() which takes the array as input parameter and returns the leftmost digit of the product of the numbers of the array.
 

Expected Time Complexity: O(n * log10(n)) where n is the length of array.
Expected Space Compelxity: O(1)
 

Constraints: 
1 <= length of array <= 100000
1 <= elements of the array <= 1000000

.................................

int LeftMostDigit(vector<int>nums)
	{
	    // Code here
	    double sum = 0;
		for(int i = 0; i < nums.size(); i++){
			sum += log10(nums[i] * 1.0);
		}
		sum -= (int)sum;
		int i;
		for(i = 2; i <= 9; i++){
			if(sum >= log10(i-1) and sum <= log10(i))
				return i-1;
		}
		return i-1;
	}
  
  .................................
