Print this pattern! 

.........................
Given an integer N, you need to print the following pattern.

Example 1:

Input:
N = 3
Output:
33333
32223
32123
32223
33333

Explanation:
When N = 3 then there will be three boundaries.
Outer boundary contains only 3.
Middle boundary contains only 2.
And the inner boundary contains only 1.
Example 2:

Input:
N = 4
Output:
4444444
4333334
4322234
4321234
4322234
4333334
4444444
Your Task:  
You don't need to read input. Your task is to complete the function printPattern() which takes an integer N as an input parameter and print the pattern for it.

Expected Time Complexity: O(N2)
Expected Auxiliary Space: O(1)

Constraints:
1 <= N <= 9

.............................
public:
    void printPattern(int N)
    {
        // Write Your Code here
        int k=0;
       for(int i=0;i<=(2*N-1)/2;i++){
           k=0;
           for(int j=0;j<2*N-1;j++){
               cout<<N-k;
               if(k+1<=i && j<N-1)
                   k++;
               if(j>=N-1 && k-1>=0 && j>=(2*N-2)-i)
                   k--;
           }
           cout<<"\n";
       }
       for(int i=(2*N-1)/2-1;i>=0;i--){
           k=0;
           for(int j=0;j<2*N-1;j++){
                cout<<N-k;
               if(k+1<=i && j<N-1)
                   k++;
               if(j>=N-1 && k-1>=0 && j>=(2*N-2)-i)
                   k--;
           }
           cout<<"\n";
       }
    }
};

......................
